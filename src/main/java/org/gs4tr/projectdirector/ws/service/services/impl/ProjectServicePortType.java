
package org.gs4tr.projectdirector.ws.service.services.impl;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import org.gs4tr.projectdirector.model.dto.xsd.Project;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ProjectServicePortType", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
@XmlSeeAlso({
    org.gs4tr.projectdirector.model.dto.xsd.ObjectFactory.class,
    org.gs4tr.projectdirector.ws.service.services.impl.ObjectFactory.class,
    org.w3._2005._05.xmlmime.ObjectFactory.class
})
public interface ProjectServicePortType {


    /**
     * 
     * @param ticket
     * @return
     *     returns org.gs4tr.projectdirector.model.dto.xsd.Project
     */
    @WebMethod(action = "urn:findByTicket")
    @WebResult(targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
    @RequestWrapper(localName = "findByTicket", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.FindProjectByTicket")
    @ResponseWrapper(localName = "findByTicketResponse", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.FindProjectByTicketResponse")
    public Project findByTicket(
        @WebParam(name = "ticket", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
        String ticket);

    /**
     * 
     * @param projectName
     * @return
     *     returns org.gs4tr.projectdirector.model.dto.xsd.Project
     */
    @WebMethod(action = "urn:findProjectByName")
    @WebResult(targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
    @RequestWrapper(localName = "findProjectByName", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.FindProjectByName")
    @ResponseWrapper(localName = "findProjectByNameResponse", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.FindProjectByNameResponse")
    public Project findProjectByName(
        @WebParam(name = "projectName", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
        String projectName);

    /**
     * 
     * @param projectShortCode
     * @return
     *     returns org.gs4tr.projectdirector.model.dto.xsd.Project
     */
    @WebMethod(action = "urn:findProjectByShortCode")
    @WebResult(targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
    @RequestWrapper(localName = "findProjectByShortCode", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.FindProjectByShortCode")
    @ResponseWrapper(localName = "findProjectByShortCodeResponse", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.FindProjectByShortCodeResponse")
    public Project findProjectByShortCode(
        @WebParam(name = "projectShortCode", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
        String projectShortCode);

    /**
     * 
     * @param isSubProjectIncluded
     * @return
     *     returns java.util.List<org.gs4tr.projectdirector.model.dto.xsd.Project>
     */
    @WebMethod(action = "urn:getUserProjects")
    @WebResult(targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
    @RequestWrapper(localName = "getUserProjects", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.GetUserProjects")
    @ResponseWrapper(localName = "getUserProjectsResponse", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.GetUserProjectsResponse")
    public List<Project> getUserProjects(
        @WebParam(name = "isSubProjectIncluded", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
        boolean isSubProjectIncluded);

}
