
package org.gs4tr.projectdirector.ws.service.services.impl;

import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "ProjectAClientService_4180", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
public class ProjectAClientService4180
    extends Service
{

    private static URL PROJECTACLIENTSERVICE4180_WSDL_LOCATION;
    private static WebServiceException PROJECTACLIENTSERVICE4180_EXCEPTION;
    private final static QName PROJECTACLIENTSERVICE4180_QNAME = new QName("http://impl.services.service.ws.projectdirector.gs4tr.org", "ProjectAClientService_4180");

    public ProjectAClientService4180() {
        super(__getWsdlLocation(), PROJECTACLIENTSERVICE4180_QNAME);
    }

    public ProjectAClientService4180(WebServiceFeature... features) {
        super(__getWsdlLocation(), PROJECTACLIENTSERVICE4180_QNAME, features);
    }

    public ProjectAClientService4180(URL wsdlLocation) {
        super(wsdlLocation, PROJECTACLIENTSERVICE4180_QNAME);
        PROJECTACLIENTSERVICE4180_WSDL_LOCATION = wsdlLocation;
        PROJECTACLIENTSERVICE4180_EXCEPTION = null;

    }

    public ProjectAClientService4180(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, PROJECTACLIENTSERVICE4180_QNAME, features);
        PROJECTACLIENTSERVICE4180_WSDL_LOCATION = wsdlLocation;
        PROJECTACLIENTSERVICE4180_EXCEPTION = null;
    }

    public ProjectAClientService4180(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
        PROJECTACLIENTSERVICE4180_WSDL_LOCATION = wsdlLocation;
        PROJECTACLIENTSERVICE4180_EXCEPTION = null;
    }

    public ProjectAClientService4180(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
        PROJECTACLIENTSERVICE4180_WSDL_LOCATION = wsdlLocation;
        PROJECTACLIENTSERVICE4180_EXCEPTION = null;
    }

    /**
     * 
     * @return
     *     returns ProjectAClientServicePortType
     */
    @WebEndpoint(name = "ProjectAClientServiceHttpSoap11Endpoint")
    public ProjectAClientServicePortType getProjectAClientServiceHttpSoap11Endpoint() {
        return super.getPort(new QName("http://impl.services.service.ws.projectdirector.gs4tr.org", "ProjectAClientServiceHttpSoap11Endpoint"), ProjectAClientServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ProjectAClientServicePortType
     */
    @WebEndpoint(name = "ProjectAClientServiceHttpSoap11Endpoint")
    public ProjectAClientServicePortType getProjectAClientServiceHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(new QName("http://impl.services.service.ws.projectdirector.gs4tr.org", "ProjectAClientServiceHttpSoap11Endpoint"), ProjectAClientServicePortType.class, features);
    }

    /**
     * 
     * @return
     *     returns ProjectAClientServicePortType
     */
    @WebEndpoint(name = "ProjectAClientServiceHttpSoap12Endpoint")
    public ProjectAClientServicePortType getProjectAClientServiceHttpSoap12Endpoint() {
        return super.getPort(new QName("http://impl.services.service.ws.projectdirector.gs4tr.org", "ProjectAClientServiceHttpSoap12Endpoint"), ProjectAClientServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ProjectAClientServicePortType
     */
    @WebEndpoint(name = "ProjectAClientServiceHttpSoap12Endpoint")
    public ProjectAClientServicePortType getProjectAClientServiceHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(new QName("http://impl.services.service.ws.projectdirector.gs4tr.org", "ProjectAClientServiceHttpSoap12Endpoint"), ProjectAClientServicePortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (PROJECTACLIENTSERVICE4180_EXCEPTION!= null) {
            throw PROJECTACLIENTSERVICE4180_EXCEPTION;
        }
        return PROJECTACLIENTSERVICE4180_WSDL_LOCATION;
    }

}
