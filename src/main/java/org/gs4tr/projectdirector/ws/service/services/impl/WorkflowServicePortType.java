package org.gs4tr.projectdirector.ws.service.services.impl;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.4.2
 * 2016-05-25T11:06:03.308+03:00
 * Generated source version: 2.4.2
 * 
 */
@WebService(targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", name = "WorkflowServicePortType")
@XmlSeeAlso({ObjectFactory.class, org.gs4tr.projectdirector.model.dto.ObjectFactory.class, org.w3._2005._05.xmlmime.ObjectFactory.class})
public interface WorkflowServicePortType {

    @WebMethod(action = "urn:downloadPreview")
    @Action(input = "urn:downloadPreview", output = "urn:downloadPreviewResponse")
    @RequestWrapper(localName = "downloadPreview", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.DownloadPreview")
    @ResponseWrapper(localName = "downloadPreviewResponse", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.DownloadPreviewResponse")
    @WebResult(name = "return", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
    public org.gs4tr.projectdirector.model.dto.WorkflowRequestTicket downloadPreview(
        @WebParam(name = "workflowRequest", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
        org.gs4tr.projectdirector.model.dto.WorkflowRequest workflowRequest
    );

    @WebMethod(action = "urn:upload")
    @Action(input = "urn:upload", output = "urn:uploadResponse")
    @RequestWrapper(localName = "upload", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.Upload")
    @ResponseWrapper(localName = "uploadResponse", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.UploadResponse")
    @WebResult(name = "return", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
    public org.gs4tr.projectdirector.model.dto.WorkflowRequestTicket upload(
        @WebParam(name = "resourceInfo", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
        org.gs4tr.projectdirector.model.dto.ResourceInfo resourceInfo,
        @WebParam(name = "data", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
        org.w3._2005._05.xmlmime.Base64Binary data
    );

    @WebMethod(action = "urn:findAvailableWorkflowInfosForClaim")
    @Action(input = "urn:findAvailableWorkflowInfosForClaim", output = "urn:findAvailableWorkflowInfosForClaimResponse")
    @RequestWrapper(localName = "findAvailableWorkflowInfosForClaim", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.FindAvailableWorkflowInfosForClaim")
    @ResponseWrapper(localName = "findAvailableWorkflowInfosForClaimResponse", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.FindAvailableWorkflowInfosForClaimResponse")
    @WebResult(name = "return", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
    public java.util.List<org.gs4tr.projectdirector.model.dto.SubmissionWorkflowInfo> findAvailableWorkflowInfosForClaim(
        @WebParam(name = "limit", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
        int limit
    );

    @WebMethod(action = "urn:findAvailableWorkflowInfosForDownloadBySubmissionTickets")
    @Action(input = "urn:findAvailableWorkflowInfosForDownloadBySubmissionTickets", output = "urn:findAvailableWorkflowInfosForDownloadBySubmissionTicketsResponse")
    @RequestWrapper(localName = "findAvailableWorkflowInfosForDownloadBySubmissionTickets", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.FindAvailableWorkflowInfosForDownloadBySubmissionTickets")
    @ResponseWrapper(localName = "findAvailableWorkflowInfosForDownloadBySubmissionTicketsResponse", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.FindAvailableWorkflowInfosForDownloadBySubmissionTicketsResponse")
    @WebResult(name = "return", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
    public java.util.List<org.gs4tr.projectdirector.model.dto.SubmissionWorkflowInfo> findAvailableWorkflowInfosForDownloadBySubmissionTickets(
        @WebParam(name = "submissionTickets", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
        java.util.List<java.lang.String> submissionTickets
    );

    @WebMethod(action = "urn:download")
    @Action(input = "urn:download", output = "urn:downloadResponse")
    @RequestWrapper(localName = "download", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.Download")
    @ResponseWrapper(localName = "downloadResponse", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.DownloadResponse")
    @WebResult(name = "return", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
    public org.gs4tr.projectdirector.model.dto.WorkflowRequestTicket download(
        @WebParam(name = "workflowRequest", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
        org.gs4tr.projectdirector.model.dto.WorkflowRequest workflowRequest
    );

    @WebMethod(action = "urn:checkDownloadAction")
    @Action(input = "urn:checkDownloadAction", output = "urn:checkDownloadActionResponse")
    @RequestWrapper(localName = "checkDownloadAction", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.CheckDownloadAction")
    @ResponseWrapper(localName = "checkDownloadActionResponse", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.CheckDownloadActionResponse")
    @WebResult(name = "return", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
    public org.gs4tr.projectdirector.model.dto.DownloadActionResult checkDownloadAction(
        @WebParam(name = "workflowRequestTicket", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
        org.gs4tr.projectdirector.model.dto.WorkflowRequestTicket workflowRequestTicket
    );

    @WebMethod(action = "urn:claim")
    @Action(input = "urn:claim", output = "urn:claimResponse")
    @RequestWrapper(localName = "claim", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.Claim")
    @ResponseWrapper(localName = "claimResponse", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.ClaimResponse")
    @WebResult(name = "return", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
    public java.lang.String claim(
        @WebParam(name = "workflowRequest", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
        org.gs4tr.projectdirector.model.dto.WorkflowRequest workflowRequest
    );

    @WebMethod(action = "urn:findAvailableWorkflowInfosForDownload")
    @Action(input = "urn:findAvailableWorkflowInfosForDownload", output = "urn:findAvailableWorkflowInfosForDownloadResponse")
    @RequestWrapper(localName = "findAvailableWorkflowInfosForDownload", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.FindAvailableWorkflowInfosForDownload")
    @ResponseWrapper(localName = "findAvailableWorkflowInfosForDownloadResponse", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.FindAvailableWorkflowInfosForDownloadResponse")
    @WebResult(name = "return", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
    public java.util.List<org.gs4tr.projectdirector.model.dto.SubmissionWorkflowInfo> findAvailableWorkflowInfosForDownload(
        @WebParam(name = "limit", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
        int limit
    );

    @WebMethod(action = "urn:checkUploadAction")
    @Action(input = "urn:checkUploadAction", output = "urn:checkUploadActionResponse")
    @RequestWrapper(localName = "checkUploadAction", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.CheckUploadAction")
    @ResponseWrapper(localName = "checkUploadActionResponse", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.CheckUploadActionResponse")
    @WebResult(name = "return", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
    public org.gs4tr.projectdirector.model.dto.UploadActionResult checkUploadAction(
        @WebParam(name = "workflowRequestTicket", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
        org.gs4tr.projectdirector.model.dto.WorkflowRequestTicket workflowRequestTicket
    );
}
