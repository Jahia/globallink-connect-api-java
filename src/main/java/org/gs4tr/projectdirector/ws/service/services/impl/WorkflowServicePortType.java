
package org.gs4tr.projectdirector.ws.service.services.impl;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import org.gs4tr.projectdirector.model.dto.xsd.DownloadActionResult;
import org.gs4tr.projectdirector.model.dto.xsd.ResourceInfo;
import org.gs4tr.projectdirector.model.dto.xsd.SubmissionWorkflowInfo;
import org.gs4tr.projectdirector.model.dto.xsd.UploadActionResult;
import org.gs4tr.projectdirector.model.dto.xsd.WorkflowRequest;
import org.gs4tr.projectdirector.model.dto.xsd.WorkflowRequestTicket;
import org.w3._2005._05.xmlmime.Base64Binary;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WorkflowServicePortType", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
@XmlSeeAlso({
    org.gs4tr.projectdirector.model.dto.xsd.ObjectFactory.class,
    org.gs4tr.projectdirector.ws.service.services.impl.ObjectFactory.class,
    org.w3._2005._05.xmlmime.ObjectFactory.class
})
public interface WorkflowServicePortType {


    /**
     * 
     * @param workflowRequestTicket
     * @return
     *     returns org.gs4tr.projectdirector.model.dto.xsd.DownloadActionResult
     */
    @WebMethod(action = "urn:checkDownloadAction")
    @WebResult(targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
    @RequestWrapper(localName = "checkDownloadAction", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.CheckDownloadAction")
    @ResponseWrapper(localName = "checkDownloadActionResponse", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.CheckDownloadActionResponse")
    public DownloadActionResult checkDownloadAction(
        @WebParam(name = "workflowRequestTicket", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
        WorkflowRequestTicket workflowRequestTicket);

    /**
     * 
     * @param workflowRequestTicket
     * @return
     *     returns org.gs4tr.projectdirector.model.dto.xsd.UploadActionResult
     */
    @WebMethod(action = "urn:checkUploadAction")
    @WebResult(targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
    @RequestWrapper(localName = "checkUploadAction", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.CheckUploadAction")
    @ResponseWrapper(localName = "checkUploadActionResponse", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.CheckUploadActionResponse")
    public UploadActionResult checkUploadAction(
        @WebParam(name = "workflowRequestTicket", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
        WorkflowRequestTicket workflowRequestTicket);

    /**
     * 
     * @param workflowRequest
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "urn:claim")
    @WebResult(targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
    @RequestWrapper(localName = "claim", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.Claim")
    @ResponseWrapper(localName = "claimResponse", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.ClaimResponse")
    public String claim(
        @WebParam(name = "workflowRequest", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
        WorkflowRequest workflowRequest);

    /**
     * 
     * @param workflowRequest
     * @return
     *     returns org.gs4tr.projectdirector.model.dto.xsd.WorkflowRequestTicket
     */
    @WebMethod(action = "urn:download")
    @WebResult(targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
    @RequestWrapper(localName = "download", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.Download")
    @ResponseWrapper(localName = "downloadResponse", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.DownloadResponse")
    public WorkflowRequestTicket download(
        @WebParam(name = "workflowRequest", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
        WorkflowRequest workflowRequest);

    /**
     * 
     * @param workflowRequest
     * @return
     *     returns org.gs4tr.projectdirector.model.dto.xsd.WorkflowRequestTicket
     */
    @WebMethod(action = "urn:downloadPreview")
    @WebResult(targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
    @RequestWrapper(localName = "downloadPreview", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.DownloadPreview")
    @ResponseWrapper(localName = "downloadPreviewResponse", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.DownloadPreviewResponse")
    public WorkflowRequestTicket downloadPreview(
        @WebParam(name = "workflowRequest", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
        WorkflowRequest workflowRequest);

    /**
     * 
     * @param limit
     * @return
     *     returns java.util.List<org.gs4tr.projectdirector.model.dto.xsd.SubmissionWorkflowInfo>
     */
    @WebMethod(action = "urn:findAvailableWorkflowInfosForClaim")
    @WebResult(targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
    @RequestWrapper(localName = "findAvailableWorkflowInfosForClaim", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.FindAvailableWorkflowInfosForClaim")
    @ResponseWrapper(localName = "findAvailableWorkflowInfosForClaimResponse", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.FindAvailableWorkflowInfosForClaimResponse")
    public List<SubmissionWorkflowInfo> findAvailableWorkflowInfosForClaim(
        @WebParam(name = "limit", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
        int limit);

    /**
     * 
     * @param limit
     * @return
     *     returns java.util.List<org.gs4tr.projectdirector.model.dto.xsd.SubmissionWorkflowInfo>
     */
    @WebMethod(action = "urn:findAvailableWorkflowInfosForDownload")
    @WebResult(targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
    @RequestWrapper(localName = "findAvailableWorkflowInfosForDownload", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.FindAvailableWorkflowInfosForDownload")
    @ResponseWrapper(localName = "findAvailableWorkflowInfosForDownloadResponse", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.FindAvailableWorkflowInfosForDownloadResponse")
    public List<SubmissionWorkflowInfo> findAvailableWorkflowInfosForDownload(
        @WebParam(name = "limit", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
        int limit);

    /**
     * 
     * @param submissionTickets
     * @return
     *     returns java.util.List<org.gs4tr.projectdirector.model.dto.xsd.SubmissionWorkflowInfo>
     */
    @WebMethod(action = "urn:findAvailableWorkflowInfosForDownloadBySubmissionTickets")
    @WebResult(targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
    @RequestWrapper(localName = "findAvailableWorkflowInfosForDownloadBySubmissionTickets", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.FindAvailableWorkflowInfosForDownloadBySubmissionTickets")
    @ResponseWrapper(localName = "findAvailableWorkflowInfosForDownloadBySubmissionTicketsResponse", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.FindAvailableWorkflowInfosForDownloadBySubmissionTicketsResponse")
    public List<SubmissionWorkflowInfo> findAvailableWorkflowInfosForDownloadBySubmissionTickets(
        @WebParam(name = "submissionTickets", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
        List<String> submissionTickets);

    /**
     * 
     * @param resourceInfo
     * @param data
     * @return
     *     returns org.gs4tr.projectdirector.model.dto.xsd.WorkflowRequestTicket
     */
    @WebMethod(action = "urn:upload")
    @WebResult(targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
    @RequestWrapper(localName = "upload", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.Upload")
    @ResponseWrapper(localName = "uploadResponse", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org", className = "org.gs4tr.projectdirector.ws.service.services.impl.UploadResponse")
    public WorkflowRequestTicket upload(
        @WebParam(name = "resourceInfo", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
        ResourceInfo resourceInfo,
        @WebParam(name = "data", targetNamespace = "http://impl.services.service.ws.projectdirector.gs4tr.org")
        Base64Binary data);

}
